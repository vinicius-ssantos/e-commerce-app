services:
  postgresql:
    container_name: ms_pg_sql
    image: postgres
    environment:
      POSTGRES_USER: viniciussantos
      POSTGRES_PASSWORD: viniciussantos
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - microservices-net
    restart: unless-stopped

  pgadmin:
    container_name: ms_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - microservices-net
    restart: unless-stopped



  mongodb:
    image: mongo
    container_name: mongo_db
    ports:
      - 27017:27017
    volumes:
      - mongo:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=viniciussantos
      - MONGO_INITDB_ROOT_PASSWORD=viniciussantos

  mongo-express:
    image: mongo-express
    container_name: mongo_express
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=viniciussantos
      - ME_CONFIG_MONGODB_ADMINPASSWORD=viniciussantos
      - ME_CONFIG_MONGODB_SERVER=mongodb



  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - microservices-net
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ms_kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092

  mail-dev:
    container_name: ms-mail-dev
    image: maildev/maildev
    ports:
      - 1080:1080
      - 1025:1025

networks:
  microservices-net:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  mongo:


# O fator de replicação para o tópico de offsets do Kafka.
# Isso define quantas cópias de cada mensagem são armazenadas em diferentes brokers para redundância.
#KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

# O fator de replicação para o log de estado de transação do Kafka.
# Isso define quantas cópias do log de estado de transação são armazenadas em diferentes brokers para redundância.
#KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

# O número mínimo de réplicas ISR que devem confirmar uma gravação para que ela seja considerada bem-sucedida.
# ISR significa réplicas em sincronia, que são as réplicas que estão atualmente vivas e em sincronia com o líder.
#KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1

# A string de conexão para o ZooKeeper.
# O Kafka usa o ZooKeeper para gerenciar e coordenar os brokers.
#KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

# O mapeamento entre os nomes dos listeners e os protocolos de segurança.
# Isso define quais protocolos de segurança são usados para cada listener.
#KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT

# A lista de endereços e portas que o broker Kafka anuncia aos produtores e consumidores.
# Isso define onde os produtores e consumidores podem se conectar para enviar e receber mensagens.
#KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092